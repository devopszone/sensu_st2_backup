Metadata-Version: 2.0
Name: mistral
Version: 0.0.0
Summary: Mistral Project
Home-page: https://docs.openstack.org/mistral/latest/
Author: OpenStack
Author-email: openstack-dev@lists.openstack.org
License: Apache License, Version 2.0
Platform: UNKNOWN
Requires-Dist: Babel (>=2.3.4,!=2.4.0)
Requires-Dist: Jinja2 (==2.10)
Requires-Dist: Mako (==1.0.7)
Requires-Dist: MarkupSafe (==1.0)
Requires-Dist: Paste (==2.0.3)
Requires-Dist: PasteDeploy (==1.5.2)
Requires-Dist: PyJWT (==1.6.1)
Requires-Dist: PyNaCl (==1.2.1)
Requires-Dist: PyYAML (==3.12)
Requires-Dist: Routes (==2.4.1)
Requires-Dist: SQLAlchemy (==1.2.6)
Requires-Dist: Tempita (==0.5.2)
Requires-Dist: WSME (==0.9.2)
Requires-Dist: WebOb (==1.8.0)
Requires-Dist: WebTest (==2.0.29)
Requires-Dist: alembic (==0.9.9)
Requires-Dist: amqp (==2.2.2)
Requires-Dist: anyjson (==0.3.3)
Requires-Dist: aodhclient (==1.0.0)
Requires-Dist: appdirs (==1.4.3)
Requires-Dist: asn1crypto (==0.24.0)
Requires-Dist: bcrypt (==3.1.4)
Requires-Dist: beautifulsoup4 (==4.6.0)
Requires-Dist: cachetools (==2.0.1)
Requires-Dist: certifi (==2018.1.18)
Requires-Dist: cffi (==1.11.5)
Requires-Dist: chardet (==3.0.4)
Requires-Dist: cliff (==2.11.0)
Requires-Dist: cmd2 (==0.8.2)
Requires-Dist: contextlib2 (==0.5.5)
Requires-Dist: croniter (==0.3.20)
Requires-Dist: cryptography (==2.2.2)
Requires-Dist: debtcollector (==1.19.0)
Requires-Dist: decorator (==4.2.1)
Requires-Dist: deprecation (==2.0)
Requires-Dist: dogpile.cache (==0.6.5)
Requires-Dist: enum-compat (==0.0.2)
Requires-Dist: enum34 (==1.1.6)
Requires-Dist: eventlet (==0.20.0)
Requires-Dist: extras (==1.0.0)
Requires-Dist: fasteners (==0.14.1)
Requires-Dist: fixtures (==3.0.0)
Requires-Dist: funcsigs (==1.0.2)
Requires-Dist: functools32 (==3.2.3.post2)
Requires-Dist: futures (==3.2.0)
Requires-Dist: futurist (==1.6.0)
Requires-Dist: gnocchiclient (==7.0.1)
Requires-Dist: greenlet (==0.4.13)
Requires-Dist: gunicorn (==19.7.1)
Requires-Dist: idna (==2.6)
Requires-Dist: ipaddress (==1.0.19)
Requires-Dist: iso8601 (==0.1.12)
Requires-Dist: jmespath (==0.9.3)
Requires-Dist: jsonpatch (==1.23)
Requires-Dist: jsonpath-rw (==1.4.0)
Requires-Dist: jsonpointer (==2.0)
Requires-Dist: jsonschema (==2.6.0)
Requires-Dist: kazoo (==2.4.0)
Requires-Dist: keystoneauth1 (==3.4.0)
Requires-Dist: keystonemiddleware (==4.21.0)
Requires-Dist: kombu (==4.1.0)
Requires-Dist: linecache2 (==1.0.0)
Requires-Dist: logutils (==0.3.5)
Requires-Dist: mistral-lib (==0.4.0)
Requires-Dist: monotonic (==1.4)
Requires-Dist: msgpack (==0.5.6)
Requires-Dist: munch (==2.2.0)
Requires-Dist: murano-pkg-check (==0.3.0)
Requires-Dist: netaddr (==0.7.19)
Requires-Dist: netifaces (==0.10.6)
Requires-Dist: networkx (==1.11)
Requires-Dist: openstacksdk (==0.12.0)
Requires-Dist: os-client-config (==1.29.0)
Requires-Dist: os-service-types (==1.2.0)
Requires-Dist: osc-lib (==1.10.0)
Requires-Dist: oslo.cache (==1.30.0)
Requires-Dist: oslo.concurrency (==3.26.0)
Requires-Dist: oslo.config (==6.0.1)
Requires-Dist: oslo.context (==2.20.0)
Requires-Dist: oslo.db (==4.35.0)
Requires-Dist: oslo.i18n (==3.20.0)
Requires-Dist: oslo.log (==3.37.0)
Requires-Dist: oslo.messaging (==5.24.2)
Requires-Dist: oslo.middleware (==3.35.0)
Requires-Dist: oslo.policy (==1.34.0)
Requires-Dist: oslo.serialization (==2.25.0)
Requires-Dist: oslo.service (==1.30.0)
Requires-Dist: oslo.utils (==3.36.0)
Requires-Dist: osprofiler (==2.0.0)
Requires-Dist: packaging (==17.1)
Requires-Dist: paramiko (==2.4.1)
Requires-Dist: pbr
Requires-Dist: pecan (==1.3.2)
Requires-Dist: pika (==0.10.0)
Requires-Dist: pika-pool (==0.1.3)
Requires-Dist: ply (==3.11)
Requires-Dist: prettytable (==0.7.2)
Requires-Dist: psycopg2 (==2.6.2)
Requires-Dist: pyOpenSSL (==17.5.0)
Requires-Dist: pyasn1 (==0.4.2)
Requires-Dist: pycadf (==2.7.0)
Requires-Dist: pycparser (==2.18)
Requires-Dist: pyinotify (==0.9.6)
Requires-Dist: pyparsing (==2.2.0)
Requires-Dist: pyperclip (==1.6.0)
Requires-Dist: python (>=mistralclient)
Requires-Dist: python-barbicanclient (==4.6.0)
Requires-Dist: python-cinderclient (==3.5.0)
Requires-Dist: python-dateutil (==2.7.2)
Requires-Dist: python-designateclient (==2.9.0)
Requires-Dist: python-editor (==1.0.3)
Requires-Dist: python-glanceclient (==2.9.1)
Requires-Dist: python-glareclient (==0.5.2)
Requires-Dist: python-heatclient (==1.14.0)
Requires-Dist: python-ironic-inspector-client (==3.1.1)
Requires-Dist: python-ironicclient (==2.3.0)
Requires-Dist: python-keystoneclient (==3.15.0)
Requires-Dist: python-magnumclient (==2.9.0)
Requires-Dist: python-memcached
Requires-Dist: python-mimeparse (==1.6.0)
Requires-Dist: python-muranoclient (==1.0.1)
Requires-Dist: python-neutronclient (==6.8.0)
Requires-Dist: python-novaclient (==10.1.0)
Requires-Dist: python-senlinclient (==1.7.0)
Requires-Dist: python-swiftclient (==3.5.0)
Requires-Dist: python-tackerclient (==0.12.0)
Requires-Dist: python-troveclient (==2.9.0)
Requires-Dist: python-zaqarclient (==1.9.0)
Requires-Dist: pytz (==2018.3)
Requires-Dist: repoze.lru (==0.7)
Requires-Dist: requests (==2.18.4)
Requires-Dist: requestsexceptions (==1.4.0)
Requires-Dist: retrying (==1.3.3)
Requires-Dist: rfc3986 (==1.1.0)
Requires-Dist: semantic-version (==2.6.0)
Requires-Dist: semver (==2.7.2)
Requires-Dist: simplegeneric (==0.8.1)
Requires-Dist: simplejson (==3.13.2)
Requires-Dist: singledispatch (==3.4.0.3)
Requires-Dist: six (==1.11.0)
Requires-Dist: sqlalchemy-migrate (==0.11.0)
Requires-Dist: sqlparse (==0.2.4)
Requires-Dist: st2mistral
Requires-Dist: statsd (==3.2.2)
Requires-Dist: stevedore (==1.28.0)
Requires-Dist: subprocess32 (==3.2.7)
Requires-Dist: tenacity (==4.9.0)
Requires-Dist: testresources (==2.0.1)
Requires-Dist: testscenarios (==0.5.0)
Requires-Dist: testtools (==2.3.0)
Requires-Dist: tooz (==1.61.0)
Requires-Dist: traceback2 (==1.4.0)
Requires-Dist: ujson (==1.35)
Requires-Dist: unicodecsv (==0.14.1)
Requires-Dist: unittest2 (==1.1.0)
Requires-Dist: urllib3 (==1.22)
Requires-Dist: vine (==1.1.4)
Requires-Dist: voluptuous (==0.11.1)
Requires-Dist: waitress (==1.1.0)
Requires-Dist: warlock (==1.3.0)
Requires-Dist: wrapt (==1.10.11)
Requires-Dist: yaql (==1.1.3)
Requires-Dist: zake (==0.2.2)

========================
Team and repository tags
========================

.. image:: https://governance.openstack.org/tc/badges/mistral.svg
    :target: https://governance.openstack.org/tc/reference/tags/index.html

Mistral
=======

Workflow Service for OpenStack cloud. This project aims to provide a mechanism
to define tasks and workflows without writing code, manage and execute them in
the cloud environment.

Installation
~~~~~~~~~~~~

The following are the steps to install Mistral on debian-based systems.

To install Mistral, you have to install the following prerequisites::

 $ apt-get install python-dev python-setuptools libffi-dev \
   libxslt1-dev libxml2-dev libyaml-dev libssl-dev

**Mistral can be used without authentication at all or it can work with
OpenStack.**

In case of OpenStack, it works **only with Keystone v3**, make sure **Keystone
v3** is installed.


Install Mistral
---------------

First of all, clone the repo and go to the repo directory::

  $ git clone https://git.openstack.org/openstack/mistral.git
  $ cd mistral


**Devstack installation**

Information about how to install Mistral with devstack can be found
`here <https://docs.openstack.org/mistral/latest/contributor/devstack.html>`_.

Configuring Mistral
~~~~~~~~~~~~~~~~~~~

Mistral configuration is needed for getting it work correctly with and without
an OpenStack environment.

#. Install and configure a database which can be *MySQL* or *PostgreSQL*
   (**SQLite can't be used in production.**). Here are the steps to connect
   Mistral to a *MySQL* database.

   * Make sure you have installed ``mysql-server`` package on your Mistral
     machine.
   * Install *MySQL driver* for python::

     $ pip install mysql-python

     or, if you work in virtualenv, run::

     $ tox -evenv -- pip install mysql-python

     NOTE: If you're using Python 3 then you need to install ``mysqlclient``
     instead of ``mysql-python``.

   * Create the database and grant privileges::

      $ mysql -u root -p
      mysql> CREATE DATABASE mistral;
      mysql> USE mistral
      mysql> GRANT ALL PRIVILEGES ON mistral.* TO 'mistral'@'localhost' \
             IDENTIFIED BY 'MISTRAL_DBPASS';
      mysql> GRANT ALL PRIVILEGES ON mistral.* TO 'mistral'@'%' IDENTIFIED BY 'MISTRAL_DBPASS';

#. Generate ``mistral.conf`` file::

    $ oslo-config-generator --config-file tools/config/config-generator.mistral.conf \
      --output-file etc/mistral.conf.sample

#. Copy service configuration files::

    $ sudo mkdir /etc/mistral
    $ sudo chown `whoami` /etc/mistral
    $ cp etc/event_definitions.yml.sample /etc/mistral/event_definitions.yml
    $ cp etc/logging.conf.sample /etc/mistral/logging.conf
    $ cp etc/policy.json /etc/mistral/policy.json
    $ cp etc/wf_trace_logging.conf.sample /etc/mistral/wf_trace_logging.conf
    $ cp etc/mistral.conf.sample /etc/mistral/mistral.conf

#. Edit file ``/etc/mistral/mistral.conf`` according to your setup. Pay attention
   to the following sections and options::

    [oslo_messaging_rabbit]
    rabbit_host = <RABBIT_HOST>
    rabbit_userid = <RABBIT_USERID>
    rabbit_password = <RABBIT_PASSWORD>

    [database]
    # Use the following line if *PostgreSQL* is used
    # connection = postgresql://<DB_USER>:<DB_PASSWORD>@localhost:5432/mistral
    connection = mysql://<DB_USER>:<DB_PASSWORD>@localhost:3306/mistral

#. If you are not using OpenStack, add the following entry to the
   ``/etc/mistral/mistral.conf`` file and **skip the following steps**::

    [pecan]
    auth_enable = False

#. Provide valid keystone auth properties::

    [keystone_authtoken]
    auth_uri = http://keystone-host:port/v3
    auth_url = http://keystone-host:port
    auth_type = password
    username = <user>
    password = <password>
    user_domain_name = <usually 'Default'>
    project_name = <project name>
    project_domain_name = <usually 'Default'>

#. Register Mistral service and Mistral endpoints on Keystone::

    $ MISTRAL_URL="http://[host]:[port]/v2"
    $ openstack service create --name mistral workflowv2
    $ openstack endpoint create mistral public $MISTRAL_URL
    $ openstack endpoint create mistral internal $MISTRAL_URL
    $ openstack endpoint create mistral admin $MISTRAL_URL

#. Update the ``mistral/actions/openstack/mapping.json`` file which contains
   all available OpenStack actions, according to the specific client versions
   of OpenStack projects in your deployment. Please find more detailed
   information in the ``tools/get_action_list.py`` script.

Before the First Run
--------------------

After local installation you will find the commands ``mistral-server`` and
``mistral-db-manage`` available in your environment. The ``mistral-db-manage``
command can be used for migrating database schema versions. If Mistral is not
installed in system then this script can be found at
``mistral/db/sqlalchemy/migration/cli.py``, it can be executed using Python
command line.

To update the database schema to the latest revision, type::

  $ mistral-db-manage --config-file <path_to_config> upgrade head

To populate the database with standard actions and workflows, type::
  $ mistral-db-manage --config-file <path_to_config> populate

For more detailed information about ``mistral-db-manage`` script please check
file ``mistral/db/sqlalchemy/migration/alembic_migrations/README.md``.

Running Mistral API server
--------------------------

To run Mistral API server::

  $ tox -evenv -- python mistral/cmd/launch.py --server api --config-file <path_to_config>

Running Mistral Engines
-----------------------

To run Mistral Engine::

  $ tox -evenv -- python mistral/cmd/launch.py --server engine --config-file <path_to_config>

Running Mistral Task Executors
------------------------------

To run Mistral Task Executor instance::

  $ tox -evenv -- python mistral/cmd/launch.py --server executor --config-file <path_to_config>

Note that at least one Engine instance and one Executor instance should be
running in order for workflow tasks to be processed by Mistral.

If you want to run some tasks on specific executor, the *task affinity* feature
can be used to send these tasks directly to a specific executor. You can edit
the following property in your mistral configuration file for this purpose::

    [executor]
    host = my_favorite_executor

After changing this option, you will need to start (restart) the executor. Use
the ``target`` property of a task to specify the executor::

    ... Workflow YAML ...
    task1:
      ...
      target: my_favorite_executor
    ... Workflow YAML ...

Running Multiple Mistral Servers Under the Same Process
-------------------------------------------------------

To run more than one server (API, Engine, or Task Executor) on the same
process::

  $ tox -evenv -- python mistral/cmd/launch.py --server api,engine --config-file <path_to_config>

The value for the ``--server`` option can be a comma-delimited list. The valid
options are ``all`` (which is the default if not specified) or any combination
of ``api``, ``engine``, and ``executor``.

It's important to note that the ``fake`` transport for the ``rpc_backend``
defined in the configuration file should only be used if ``all`` Mistral
servers are launched on the same process. Otherwise, messages do not get
delivered because the ``fake`` transport is using an in-process queue.

Project Goals 2018
------------------

#. **Complete Mistral documentation**.

   Mistral documentation should be more usable. It requires focused work to
   make it well structured, eliminate gaps in API/Mistral Workflow Language
   specifications, add more examples and tutorials.

   *Definition of done*:
   All capabilities are covered, all documentation topics are written using
   the same style and structure principles. The obvious sub-goal of this goal
   is to establish these principles.

#. **Finish Mistral multi-node mode**.

   Mistral needs to be proven to work reliably in multi-node mode. In order
   to achieve it we need to make a number of engine, executor and RPC
   changes and configure a CI gate to run stress tests on multi-node Mistral.

   *Definition of done*:
   CI gate supports MySQL, all critically important functionality (join,
   with-items, parallel workflows, sequential workflows) is covered by tests.

Project Resources
-----------------

* `Mistral Official Documentation <https://docs.openstack.org/mistral/latest/>`_

* Project status, bugs, and blueprints are tracked on
  `Launchpad <https://launchpad.net/mistral/>`_

* Additional resources are linked from the project
  `Wiki <https://wiki.openstack.org/wiki/Mistral/>`_ page

* Apache License Version 2.0 http://www.apache.org/licenses/LICENSE-2.0



